<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRaptorRun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables

grav = 1;
jspd = 15;
vspd = 0;
image_speed = 2;
hspeed = .3;

randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump and collisions

var jkeypressed = keyboard_check_pressed(vk_space);
var jkeyheld = keyboard_check(vk_space);    


if(place_meeting(x, y+1, objGround) or place_meeting(x, y+1, objColumn1Top)
or place_meeting(x, y+1, objPlatformTop))
{
vspd=0;

//jumping
    if(jkeypressed){       
        vspd = -jspd;
    }
}
else{
//gravity
if(vspd &lt; 10){
    vspd+=grav;
}
}
//variable jump height
if(vspd &lt; 0) &amp;&amp; (!jkeyheld){
    vspd = max(vspd, 0)
}

vspeed = vspd;

//collision with columns
if( sprite_index == sprRaptorRun )
{
if (place_meeting(x+hspeed,y-8,objColumnParent) or place_meeting(x+hspeed, y-8, objPlatform))
{
    //while(!place_meeting(x+sign(hspd),y-8,objColumnParent) or (!place_meeting(x+sign(hspd), y-8, objPlatform))){
        //x+=sign(hspd);
   // }
    hspeed = -5;
    sprite_index = sprRaptorDie;
    image_index = 0;
    image_speed = 0.5;     
}
//collision with Little Man    
if distance_to_object(objLittleManRun) &lt; 2
{
    room_goto(Level1_Death)

    //background_hspeed[1] = 0;
    //objPlatform.hspeed = 0;
    //objGroundPlatform.hspeed = 0;
    //objSetSpawner.instance_destroy();

    //objLittleManRun.hspeed = 0;
    //objLittleManRun.sprite_index = sprLittleManIdle;
    
    //objRaptorRun.hspeed = 0;
    //sprite_index = sprRaptorAttack;
    //image_index = 0;
    //image_speed = 0.5;
    
    //objColumnParent.hspeed = 0;
}
}
//raptor die
if( sprite_index == sprRaptorDie)
{  
      if(image_index &gt;=18 ){
        sprite_index = sprRaptorDead;
      }
}
//raptor attack  
//if(sprite_index == sprRaptorAttack)
//{   
    //if(image_index &gt;=23){
        //sprite_index = sprRaptorIdle;
        //image_index = 0;
        //image_speed = 0.5;        
    //}
//}
//censored
//if(sprite_index == sprRaptorIdle)
//{
    //objLittleManRun.sprite_index = sprCensored;
    //sprCensored.image_index = 0;
    //sprCensored.image_speed = 0.2;
//}       
     
            

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
